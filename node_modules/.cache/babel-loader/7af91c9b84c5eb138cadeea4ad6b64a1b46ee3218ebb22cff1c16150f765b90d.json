{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u5B66\\u4E60\\\\React\\\\twitter-clone-main\\\\src\\\\Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Feed.css';\nimport TweetBox from './TweetBox';\nimport Post from './Post';\nimport db from './firebase';\nimport FlipMove from 'react-flip-move';\n/* \nfunction Feed() {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        db.collection('posts').onSnapshot(snapshot =>{\n            setPosts(snapshot.docs.map(doc => doc.data()))\n        })\n    }, [])\n\n    console.log(posts)\n\n    return (\n        <div className = \"feed\">\n            <div className = \"feed__header\">\n                <h2>Home</h2>\n            </div>\n\n            <TweetBox />\n            <FlipMove>\n                {posts.map(post => (\n                <Post \n                key = {post.text}\n                displayName = {post.displayName}\n                username = {post.username}\n                verified = {post.verified}\n                text = {post.text}\n                image = {post.image}\n                avatar = {post.avatar}\n            />\n            ))}\n            </FlipMove>   \n        </div>\n    )\n}\nexport default Feed */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed() {\n  _s();\n  /*     useEffect(() => {\n  setPosts(db);\n  }, []) */\n\n  const [posts, setPosts] = useState({\n    key: ['post', 'hello'],\n    displayName: ['Allsee Technologies', 'Allsee Technologies'],\n    username: ['Allsee Tech', 'Allsee Tech'],\n    verified: [true, true],\n    text: ['post', 'hello'],\n    avatar: [\"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\", \"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\"]\n  });\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed__header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TweetBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        displayName: post.displayName,\n        username: post.username,\n        verified: post.verified,\n        text: post.text,\n        image: post.image,\n        avatar: post.avatar\n      }, post.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Feed, \"WRStPYg871FMXmR+1K2O+ujRv0E=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","TweetBox","Post","db","FlipMove","jsxDEV","_jsxDEV","Feed","_s","posts","setPosts","key","displayName","username","verified","text","avatar","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","image","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/学习/React/twitter-clone-main/src/Feed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Feed.css'\nimport TweetBox from './TweetBox'\nimport Post from './Post'\nimport db from './firebase'\nimport FlipMove from 'react-flip-move'\n/* \nfunction Feed() {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        db.collection('posts').onSnapshot(snapshot =>{\n            setPosts(snapshot.docs.map(doc => doc.data()))\n        })\n    }, [])\n\n    console.log(posts)\n\n    return (\n        <div className = \"feed\">\n            <div className = \"feed__header\">\n                <h2>Home</h2>\n            </div>\n\n            <TweetBox />\n            <FlipMove>\n                {posts.map(post => (\n                <Post \n                key = {post.text}\n                displayName = {post.displayName}\n                username = {post.username}\n                verified = {post.verified}\n                text = {post.text}\n                image = {post.image}\n                avatar = {post.avatar}\n            />\n            ))}\n            </FlipMove>   \n        </div>\n    )\n}\nexport default Feed */\n\n\n\nfunction Feed() {/*     useEffect(() => {\n        setPosts(db);\n    }, []) */\n\n    const [posts, setPosts] = useState({ key : ['post','hello'],\n    displayName : ['Allsee Technologies','Allsee Technologies'],\n    username : ['Allsee Tech','Allsee Tech'],\n    verified : [true, true],\n    text :['post','hello'],\n    avatar : [ \"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\", \"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\"]});\n    \n    console.log(posts)\n\n    return (\n        <div className = \"feed\">\n            <div className = \"feed__header\">\n                <h2>Home</h2>\n            </div>\n\n            <TweetBox />\n            <FlipMove>\n                {posts.map(post => (\n                <Post \n                key = {post.text}\n                displayName = {post.displayName}\n                username = {post.username}\n                verified = {post.verified}\n                text = {post.text}\n                image = {post.image}\n                avatar = {post.avatar}\n            />\n            ))}\n            </FlipMove>   \n        </div>\n    )\n}\nexport default Feed"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA,SAAAC,MAAA,IAAAC,OAAA;AAuCA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAAC;AACjB;AACA;;EAEI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IAAEW,GAAG,EAAG,CAAC,MAAM,EAAC,OAAO,CAAC;IAC3DC,WAAW,EAAG,CAAC,qBAAqB,EAAC,qBAAqB,CAAC;IAC3DC,QAAQ,EAAG,CAAC,aAAa,EAAC,aAAa,CAAC;IACxCC,QAAQ,EAAG,CAAC,IAAI,EAAE,IAAI,CAAC;IACvBC,IAAI,EAAE,CAAC,MAAM,EAAC,OAAO,CAAC;IACtBC,MAAM,EAAG,CAAE,+EAA+E,EAAE,+EAA+E;EAAC,CAAC,CAAC;EAE9KC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EAElB,oBACIH,OAAA;IAAKa,SAAS,EAAG,MAAM;IAAAC,QAAA,gBACnBd,OAAA;MAAKa,SAAS,EAAG,cAAc;MAAAC,QAAA,eAC3Bd,OAAA;QAAAc,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAENlB,OAAA,CAACL,QAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZlB,OAAA,CAACF,QAAQ;MAAAgB,QAAA,EACJX,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACfpB,OAAA,CAACJ,IAAI;QAELU,WAAW,EAAIc,IAAI,CAACd,WAAY;QAChCC,QAAQ,EAAIa,IAAI,CAACb,QAAS;QAC1BC,QAAQ,EAAIY,IAAI,CAACZ,QAAS;QAC1BC,IAAI,EAAIW,IAAI,CAACX,IAAK;QAClBY,KAAK,EAAID,IAAI,CAACC,KAAM;QACpBX,MAAM,EAAIU,IAAI,CAACV;MAAO,GANfU,IAAI,CAACX,IAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOnB,CACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAAChB,EAAA,CAnCQD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAoCb,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}