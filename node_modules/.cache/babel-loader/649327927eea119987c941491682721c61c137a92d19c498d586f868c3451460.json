{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u5B66\\u4E60\\\\React\\\\twitter-clone-main\\\\src\\\\TweetBox.js\",\n  _s = $RefreshSig$();\nimport { Avatar, Button } from '@mui/material';\nimport React, { useState } from 'react';\nimport './TweetBox.css';\nimport db from './firebase'; /* \n                             import { setPosts, posts } from './Feed.js'  */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TweetBox({\n  posts,\n  setposts\n}) {\n  _s();\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n  const [tweetImage, setTweetImage] = useState(\"\");\n  const sendTweet = e => {\n    e.preventDefault();\n    /* \n            db.add({\n                displayName : \"Allsee Technologies\",\n                username: \"AllseeTech\",\n                verified: false,\n                text: tweetMessage,\n                image: tweetImage,\n                avatar: \"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\"\n            }) */\n\n    setPosts([...posts, {\n      displayName: \"Allsee Technologies\",\n      username: \"AllseeTech\",\n      verified: false,\n      text: tweetMessage,\n      image: tweetImage,\n      avatar: \"https://pbs.twimg.com/profile_images/1720020150\"\n    }]);\n    setTweetMessage(\"\");\n    setTweetImage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox__input\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setTweetMessage(e.target.value),\n          value: tweetMessage,\n          placeholder: \"What's happening\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setTweetImage(e.target.value),\n        value: tweetImage,\n        className: \"tweetBox__imageInput\",\n        placeholder: \"Optional : Enter Image URL\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: sendTweet,\n        className: \"tweetBox__tweetButton\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TweetBox, \"+SONfrEWGlfcn5EJ8RetghyczsA=\");\n_c = TweetBox;\nexport default TweetBox;\nvar _c;\n$RefreshReg$(_c, \"TweetBox\");","map":{"version":3,"names":["Avatar","Button","React","useState","db","jsxDEV","_jsxDEV","TweetBox","posts","setposts","_s","tweetMessage","setTweetMessage","tweetImage","setTweetImage","sendTweet","e","preventDefault","setPosts","displayName","username","verified","text","image","avatar","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","placeholder","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/学习/React/twitter-clone-main/src/TweetBox.js"],"sourcesContent":["import { Avatar, Button } from '@mui/material'\nimport React, { useState } from 'react'\nimport './TweetBox.css'\nimport db from './firebase'/* \nimport { setPosts, posts } from './Feed.js'  */\n\nfunction TweetBox({posts,setposts}) {\n    const [tweetMessage, setTweetMessage] = useState(\"\");\n    const [tweetImage, setTweetImage] = useState(\"\");\n\n    const sendTweet = e => {\n        e.preventDefault();\n/* \n        db.add({\n            displayName : \"Allsee Technologies\",\n            username: \"AllseeTech\",\n            verified: false,\n            text: tweetMessage,\n            image: tweetImage,\n            avatar: \"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\"\n        }) */\n\n \n        setPosts([...posts, {displayName: \"Allsee Technologies\", username: \"AllseeTech\", verified: false, text: tweetMessage, image: tweetImage, avatar: \"https://pbs.twimg.com/profile_images/1720020150\"}])\n        setTweetMessage(\"\")\n        setTweetImage(\"\")\n    }\n\n    return (\n        <div className = \"tweetBox\">\n            <form>\n                <div className = \"tweetBox__input\">\n                    <Avatar\n                        src = \"https://pbs.twimg.com/profile_images/1720020150613651456/KMq5JBTI_400x400.jpg\"\n                    />\n                    <input \n                        onChange = {(e) => setTweetMessage(e.target.value)}\n                        value = {tweetMessage} \n                        placeholder = \"What's happening\" \n                        type = \"text\" \n                    />\n                </div>\n                <input \n                    onChange = { (e) => setTweetImage(e.target.value) }\n                    value = {tweetImage}\n                    className = \"tweetBox__imageInput\"\n                    placeholder = \"Optional : Enter Image URL\"\n                    type = \"text\"\n                />\n                <Button \n                onClick = { sendTweet }\n                className = \"tweetBox__tweetButton\">Post</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default TweetBox\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,EAAE,MAAM,YAAY;AAC3B;AAD2B,SAAAC,MAAA,IAAAC,OAAA;AAG3B,SAASC,QAAQA,CAAC;EAACC,KAAK;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMY,SAAS,GAAGC,CAAC,IAAI;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGQC,QAAQ,CAAC,CAAC,GAAGV,KAAK,EAAE;MAACW,WAAW,EAAE,qBAAqB;MAAEC,QAAQ,EAAE,YAAY;MAAEC,QAAQ,EAAE,KAAK;MAAEC,IAAI,EAAEX,YAAY;MAAEY,KAAK,EAAEV,UAAU;MAAEW,MAAM,EAAE;IAAiD,CAAC,CAAC,CAAC;IACrMZ,eAAe,CAAC,EAAE,CAAC;IACnBE,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACIR,OAAA;IAAKmB,SAAS,EAAG,UAAU;IAAAC,QAAA,eACvBpB,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAKmB,SAAS,EAAG,iBAAiB;QAAAC,QAAA,gBAC9BpB,OAAA,CAACN,MAAM;UACH2B,GAAG,EAAG;QAA+E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC,eACFzB,OAAA;UACI0B,QAAQ,EAAKhB,CAAC,IAAKJ,eAAe,CAACI,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAE;UACnDA,KAAK,EAAIvB,YAAa;UACtBwB,WAAW,EAAG,kBAAkB;UAChCC,IAAI,EAAG;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzB,OAAA;QACI0B,QAAQ,EAAMhB,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAG;QACnDA,KAAK,EAAIrB,UAAW;QACpBY,SAAS,EAAG,sBAAsB;QAClCU,WAAW,EAAG,4BAA4B;QAC1CC,IAAI,EAAG;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFzB,OAAA,CAACL,MAAM;QACPoC,OAAO,EAAKtB,SAAW;QACvBU,SAAS,EAAG,uBAAuB;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACrB,EAAA,CAjDQH,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmDjB,eAAeA,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}